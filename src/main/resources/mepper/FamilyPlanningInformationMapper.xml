<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liudong.dao.FamilyPlanningInformationMapper">
  <resultMap id="BaseResultMap" type="com.liudong.pojo.FamilyPlanningInformation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="husband_and_wife_go_together" jdbcType="INTEGER" property="husbandAndWifeGoTogether" />
    <result column="Proof_of_marriage_and_childbirth" jdbcType="INTEGER" property="proofOfMarriageAndChildbirth" />
    <result column="marriage_certificate No" jdbcType="VARCHAR" property="marriageCertificateNo" />
    <result column="number_of_children_born" jdbcType="INTEGER" property="numberOfChildrenBorn" />
    <result column="number_of_children_born_female" jdbcType="INTEGER" property="numberOfChildrenBornFemale" />
    <result column="within_policy" jdbcType="INTEGER" property="withinPolicy" />
    <result column="out_of_polic" jdbcType="INTEGER" property="outOfPolic" />
    <result column="certificate_issued_to_a_couple" jdbcType="INTEGER" property="certificateIssuedToACouple" />
    <result column="collection_of_social_maintenance_fee" jdbcType="INTEGER" property="collectionOfSocialMaintenanceFee" />
    <result column="pregnancy_contraception" jdbcType="VARCHAR" property="pregnancyContraception" />
    <result column="measure_time" jdbcType="TIMESTAMP" property="measureTime" />
    <result column="having_children_in_those_years" jdbcType="INTEGER" property="havingChildrenInThoseYears" />
    <result column="date_of_birth" jdbcType="TIMESTAMP" property="dateOfBirth" />
    <result column="out_of_policy" jdbcType="INTEGER" property="outOfPolicy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, husband_and_wife_go_together, Proof_of_marriage_and_childbirth, "marriage_certificate No", 
    number_of_children_born, number_of_children_born_female, within_policy, out_of_polic, 
    certificate_issued_to_a_couple, collection_of_social_maintenance_fee, pregnancy_contraception, 
    measure_time, having_children_in_those_years, date_of_birth, out_of_policy
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from family_planning_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from family_planning_information
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liudong.pojo.FamilyPlanningInformation">
    insert into family_planning_information (id, husband_and_wife_go_together, Proof_of_marriage_and_childbirth, 
      "marriage_certificate No", number_of_children_born, 
      number_of_children_born_female, within_policy, 
      out_of_polic, certificate_issued_to_a_couple, 
      collection_of_social_maintenance_fee, pregnancy_contraception, 
      measure_time, having_children_in_those_years, 
      date_of_birth, out_of_policy)
    values (#{id,jdbcType=INTEGER}, #{husbandAndWifeGoTogether,jdbcType=INTEGER}, #{proofOfMarriageAndChildbirth,jdbcType=INTEGER}, 
      #{marriageCertificateNo,jdbcType=VARCHAR}, #{numberOfChildrenBorn,jdbcType=INTEGER}, 
      #{numberOfChildrenBornFemale,jdbcType=INTEGER}, #{withinPolicy,jdbcType=INTEGER}, 
      #{outOfPolic,jdbcType=INTEGER}, #{certificateIssuedToACouple,jdbcType=INTEGER}, 
      #{collectionOfSocialMaintenanceFee,jdbcType=INTEGER}, #{pregnancyContraception,jdbcType=VARCHAR}, 
      #{measureTime,jdbcType=TIMESTAMP}, #{havingChildrenInThoseYears,jdbcType=INTEGER}, 
      #{dateOfBirth,jdbcType=TIMESTAMP}, #{outOfPolicy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liudong.pojo.FamilyPlanningInformation">
    insert into family_planning_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="husbandAndWifeGoTogether != null">
        husband_and_wife_go_together,
      </if>
      <if test="proofOfMarriageAndChildbirth != null">
        Proof_of_marriage_and_childbirth,
      </if>
      <if test="marriageCertificateNo != null">
        "marriage_certificate No",
      </if>
      <if test="numberOfChildrenBorn != null">
        number_of_children_born,
      </if>
      <if test="numberOfChildrenBornFemale != null">
        number_of_children_born_female,
      </if>
      <if test="withinPolicy != null">
        within_policy,
      </if>
      <if test="outOfPolic != null">
        out_of_polic,
      </if>
      <if test="certificateIssuedToACouple != null">
        certificate_issued_to_a_couple,
      </if>
      <if test="collectionOfSocialMaintenanceFee != null">
        collection_of_social_maintenance_fee,
      </if>
      <if test="pregnancyContraception != null">
        pregnancy_contraception,
      </if>
      <if test="measureTime != null">
        measure_time,
      </if>
      <if test="havingChildrenInThoseYears != null">
        having_children_in_those_years,
      </if>
      <if test="dateOfBirth != null">
        date_of_birth,
      </if>
      <if test="outOfPolicy != null">
        out_of_policy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="husbandAndWifeGoTogether != null">
        #{husbandAndWifeGoTogether,jdbcType=INTEGER},
      </if>
      <if test="proofOfMarriageAndChildbirth != null">
        #{proofOfMarriageAndChildbirth,jdbcType=INTEGER},
      </if>
      <if test="marriageCertificateNo != null">
        #{marriageCertificateNo,jdbcType=VARCHAR},
      </if>
      <if test="numberOfChildrenBorn != null">
        #{numberOfChildrenBorn,jdbcType=INTEGER},
      </if>
      <if test="numberOfChildrenBornFemale != null">
        #{numberOfChildrenBornFemale,jdbcType=INTEGER},
      </if>
      <if test="withinPolicy != null">
        #{withinPolicy,jdbcType=INTEGER},
      </if>
      <if test="outOfPolic != null">
        #{outOfPolic,jdbcType=INTEGER},
      </if>
      <if test="certificateIssuedToACouple != null">
        #{certificateIssuedToACouple,jdbcType=INTEGER},
      </if>
      <if test="collectionOfSocialMaintenanceFee != null">
        #{collectionOfSocialMaintenanceFee,jdbcType=INTEGER},
      </if>
      <if test="pregnancyContraception != null">
        #{pregnancyContraception,jdbcType=VARCHAR},
      </if>
      <if test="measureTime != null">
        #{measureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="havingChildrenInThoseYears != null">
        #{havingChildrenInThoseYears,jdbcType=INTEGER},
      </if>
      <if test="dateOfBirth != null">
        #{dateOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="outOfPolicy != null">
        #{outOfPolicy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liudong.pojo.FamilyPlanningInformation">
    update family_planning_information
    <set>
      <if test="husbandAndWifeGoTogether != null">
        husband_and_wife_go_together = #{husbandAndWifeGoTogether,jdbcType=INTEGER},
      </if>
      <if test="proofOfMarriageAndChildbirth != null">
        Proof_of_marriage_and_childbirth = #{proofOfMarriageAndChildbirth,jdbcType=INTEGER},
      </if>
      <if test="marriageCertificateNo != null">
        "marriage_certificate No" = #{marriageCertificateNo,jdbcType=VARCHAR},
      </if>
      <if test="numberOfChildrenBorn != null">
        number_of_children_born = #{numberOfChildrenBorn,jdbcType=INTEGER},
      </if>
      <if test="numberOfChildrenBornFemale != null">
        number_of_children_born_female = #{numberOfChildrenBornFemale,jdbcType=INTEGER},
      </if>
      <if test="withinPolicy != null">
        within_policy = #{withinPolicy,jdbcType=INTEGER},
      </if>
      <if test="outOfPolic != null">
        out_of_polic = #{outOfPolic,jdbcType=INTEGER},
      </if>
      <if test="certificateIssuedToACouple != null">
        certificate_issued_to_a_couple = #{certificateIssuedToACouple,jdbcType=INTEGER},
      </if>
      <if test="collectionOfSocialMaintenanceFee != null">
        collection_of_social_maintenance_fee = #{collectionOfSocialMaintenanceFee,jdbcType=INTEGER},
      </if>
      <if test="pregnancyContraception != null">
        pregnancy_contraception = #{pregnancyContraception,jdbcType=VARCHAR},
      </if>
      <if test="measureTime != null">
        measure_time = #{measureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="havingChildrenInThoseYears != null">
        having_children_in_those_years = #{havingChildrenInThoseYears,jdbcType=INTEGER},
      </if>
      <if test="dateOfBirth != null">
        date_of_birth = #{dateOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="outOfPolicy != null">
        out_of_policy = #{outOfPolicy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liudong.pojo.FamilyPlanningInformation">
    update family_planning_information
    set husband_and_wife_go_together = #{husbandAndWifeGoTogether,jdbcType=INTEGER},
      Proof_of_marriage_and_childbirth = #{proofOfMarriageAndChildbirth,jdbcType=INTEGER},
      "marriage_certificate No" = #{marriageCertificateNo,jdbcType=VARCHAR},
      number_of_children_born = #{numberOfChildrenBorn,jdbcType=INTEGER},
      number_of_children_born_female = #{numberOfChildrenBornFemale,jdbcType=INTEGER},
      within_policy = #{withinPolicy,jdbcType=INTEGER},
      out_of_polic = #{outOfPolic,jdbcType=INTEGER},
      certificate_issued_to_a_couple = #{certificateIssuedToACouple,jdbcType=INTEGER},
      collection_of_social_maintenance_fee = #{collectionOfSocialMaintenanceFee,jdbcType=INTEGER},
      pregnancy_contraception = #{pregnancyContraception,jdbcType=VARCHAR},
      measure_time = #{measureTime,jdbcType=TIMESTAMP},
      having_children_in_those_years = #{havingChildrenInThoseYears,jdbcType=INTEGER},
      date_of_birth = #{dateOfBirth,jdbcType=TIMESTAMP},
      out_of_policy = #{outOfPolicy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>